import { _ as _export_sfc, o as openBlock, c as createElementBlock, a as createStaticVNode } from "./app-b80752dd.js";
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h2 id="什么是url重写" tabindex="-1"><a class="header-anchor" href="#什么是url重写" aria-hidden="true">#</a> 什么是URL重写</h2><p>URL重写（URL rewriting）是一种在Web服务器上修改或转换请求URL的过程。它通常涉及使用服务器配置或规则来更改传入的URL，以便在不改变实际请求资源的情况下，实现不同的行为，如重定向、路径映射、参数处理等。 URL重写在服务器层面进行，因此客户端（如浏览器）对于URL的请求不会感知到这些更改，但服务器会根据配置进行适当的处理。 URL重写可以用于多种目的，例如：</p><ol><li>重定向: 将一个URL重写为另一个URL，实现301永久重定向或302临时重定向。这可以用于更改站点结构、修复错误的URL、实现SEO优化等。</li><li>路径映射: 将一个URL的路径映射到另一个位置，这对于隐藏实际文件路径或路径重组很有用。</li><li>查询参数处理: 在URL中添加、删除或修改查询参数，以适应不同的应用需求。</li><li>动态URL到静态URL: 将动态生成的URL（带有参数）转化为静态URL，更友好且易于索引。</li><li>隐藏技术细节: 可以通过URL重写隐藏后端服务器或应用程序的实际技术细节，提高安全性。</li></ol><p>在Nginx、Apache等常见的Web服务器中，URL重写可以通过正则表达式、规则匹配等方式来实现。具体的语法和方法会因服务器软件的不同而有所不同。通常，服务器配置文件中会有专门的部分用于配置URL重写规则，例如在Nginx中是使用rewrite指令。 URL重写是一种强大的技术，但在使用时需要小心，确保配置正确以避免潜在的问题，例如无限循环重定向或错误的重写规则可能导致网站不可用。</p><h2 id="ingress-内置变量" tabindex="-1"><a class="header-anchor" href="#ingress-内置变量" aria-hidden="true">#</a> Ingress 内置变量</h2><p>内置预定义变量即无需声明就可以使用的变量，通常包括一个http请求或响应中一部分内容的值，以下为一些常用的内置预定义变量：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>变量名 定义\n<span class="token variable">$arg_PARAMETER</span>  GET请求中变量名PARAMETER参数的值。\n<span class="token variable">$args</span>   这个变量等于GET请求中的参数。例如，foo<span class="token operator">=</span><span class="token number">123</span><span class="token operator">&amp;</span><span class="token assign-left variable">bar</span><span class="token operator">=</span>blahblah<span class="token punctuation">;</span>这个变量只可以被修改\n<span class="token variable">$binary_remote_addr</span> 二进制码形式的客户端地址。\n<span class="token variable">$body_bytes_sent</span>    传送页面的字节数\n<span class="token variable">$content_length</span> 请求头中的Content-length字段。\n<span class="token variable">$content_type</span>   请求头中的Content-Type字段。\n<span class="token variable">$cookie_COOKIE</span>  cookie COOKIE的值。\n<span class="token variable">$document_root</span>  当前请求在root指令中指定的值。\n<span class="token variable">$document_uri</span>   与<span class="token variable">$uri</span>相同。\n<span class="token variable">$host</span>   请求中的主机头<span class="token punctuation">(</span>Host<span class="token punctuation">)</span>字段，如果请求中的主机头不可用或者空，则为处理请求的server名称<span class="token punctuation">(</span>处理请求的server的server_name指令的值<span class="token punctuation">)</span>。值为小写，不包含端口。\n<span class="token variable">$hostname</span>   机器名使用 gethostname系统调用的值\n<span class="token variable">$http_HEADER</span>    HTTP请求头中的内容，HEADER为HTTP请求中的内容转为小写，-变为_<span class="token punctuation">(</span>破折号变为下划线<span class="token punctuation">)</span>，例如：<span class="token variable">$http_user_agent</span><span class="token punctuation">(</span>Uaer-Agent的值<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">$http_user_agent</span> ： 客户端agent信息<span class="token punctuation">;</span>\n<span class="token variable">$http_cookie</span> ： 客户端cookie信息<span class="token punctuation">;</span>\n<span class="token variable">$sent_http_HEADER</span>   HTTP响应头中的内容，HEADER为HTTP响应中的内容转为小写，-变为_<span class="token punctuation">(</span>破折号变为下划线<span class="token punctuation">)</span>，例如： <span class="token variable">$sent_http_cache_control</span>, <span class="token variable">$sent_http_content_type</span>…<span class="token punctuation">;</span>\n<span class="token variable">$is_args</span>    如果<span class="token variable">$args</span>设置，值为<span class="token string">&quot;?&quot;</span>，否则为<span class="token string">&quot;&quot;</span>。\n<span class="token variable">$limit_rate</span> 这个变量可以限制连接速率。\n<span class="token variable">$nginx_version</span>  当前运行的nginx版本号。\n<span class="token variable">$query_string</span>   与<span class="token variable">$args</span>相同。\n<span class="token variable">$remote_addr</span>    客户端的IP地址。\n<span class="token variable">$remote_port</span>    客户端的端口。\n<span class="token variable">$remote_user</span>    已经经过Auth Basic Module验证的用户名。\n<span class="token variable">$request_filename</span>   当前连接请求的文件路径，由root或alias指令与URI请求生成。\n<span class="token variable">$request_body</span>   这个变量（0.7.58+）包含请求的主要信息。在使用proxy_pass或fastcgi_pass指令的location中比较有意义。\n<span class="token variable">$request_body_file</span>  客户端请求主体信息的临时文件名。\n<span class="token variable">$request_completion</span> 如果请求成功，设为<span class="token string">&quot;OK&quot;</span>；如果请求未完成或者不是一系列请求中最后一部分则设为空。\n<span class="token variable">$request_method</span> 这个变量是客户端请求的动作，通常为GET或POST。包括0.8.20及之前的版本中，这个变量总为main request中的动作，如果当前请求是一个子请求，并不使用这个当前请求的动作。\n<span class="token variable">$request_uri</span>    这个变量等于包含一些客户端请求参数的原始URI，它无法修改，请查看<span class="token variable">$uri</span>更改或重写URI,\n包含请求参数的原始URI，不包含主机名，如：”/foo/bar.php?arg<span class="token operator">=</span>baz”。\n<span class="token variable">$scheme</span> 所用的协议，比如http或者是https，比如rewrite ^<span class="token punctuation">(</span>.+<span class="token punctuation">)</span>$ <span class="token variable">$scheme</span>://example.com<span class="token variable">$1</span> redirect<span class="token punctuation">;</span>\n<span class="token variable">$server_addr</span>    服务器地址，在完成一次系统调用后可以确定这个值，如果要绕开系统调用，则必须在listen中指定地址并且使用bind参数。\n<span class="token variable">$server_name</span>    服务器名称。\n<span class="token variable">$server_port</span>    请求到达服务器的端口号。\n<span class="token variable">$server_protocol</span>    请求使用的协议，通常是HTTP/1.0或HTTP/1.1。\n<span class="token variable">$uri</span>    请求中的当前URI<span class="token punctuation">(</span>不带请求参数，参数位于args<span class="token punctuation">)</span>，不同于浏览器传递的args<span class="token punctuation">)</span>，不同于浏览器传递的args<span class="token punctuation">)</span>，不同于浏览器传递的request_uri的值，它可以通过内部重定向，或者使用index指令进行修改。uri不包含主机名，如”/foo/bar.html”。\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ingress-正则表达式" tabindex="-1"><a class="header-anchor" href="#ingress-正则表达式" aria-hidden="true">#</a> Ingress 正则表达式</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>正则表达式匹配，其中：\n~       为区分大小写匹配\n~*      为不区分大小写匹配\n<span class="token operator">!</span>~和<span class="token operator">!</span>~*  分别为区分大小写不匹配及不区分大小写不匹配\n<span class="token builtin class-name">.</span>      匹配除换行符以外的任意字符\n<span class="token punctuation">\\</span>w     匹配字母或数字或下划线或汉字\n<span class="token punctuation">\\</span>s     匹配任意的空白符\n<span class="token punctuation">\\</span>d     匹配数字\n<span class="token punctuation">\\</span>b     匹配单词的开始或结束\n^      匹配字符串的开始\n$      匹配字符串的结束\n*         重复零次或更多次\n+         重复一次或更多次\n?         重复零次或一次\n<span class="token punctuation">{</span>n<span class="token punctuation">}</span>       重复n次\n<span class="token punctuation">{</span>n,<span class="token punctuation">}</span>      重复n次或更多次\n<span class="token punctuation">{</span>n,m<span class="token punctuation">}</span>     重复n到m次\n*?        复任意次，但尽可能少重复\n+?        重复1次或更多次，但尽可能少重复\n??        重复0次或1次，但尽可能少重复\n<span class="token punctuation">{</span>n,m<span class="token punctuation">}</span>?    重复n到m次，但尽可能少重复\n<span class="token punctuation">{</span>n,<span class="token punctuation">}</span>?     重复n次以上，但尽可能少重复\n<span class="token punctuation">\\</span>W        匹配任意不是字母，数字，下划线，汉字的字符\n<span class="token punctuation">\\</span>S        匹配任意不是空白符的字符\n<span class="token punctuation">\\</span>D        匹配任意非数字的字符\n<span class="token punctuation">\\</span>B        匹配不是单词开头或结束的位置\n<span class="token punctuation">[</span>^x<span class="token punctuation">]</span>      匹配除了x以外的任意字符\n<span class="token punctuation">[</span>^aeiou<span class="token punctuation">]</span>  匹配除了aeiou这几个字母以外的任意字符   \n<span class="token punctuation">(</span>exp<span class="token punctuation">)</span>         匹配exp,并捕获文本到自动命名的组里\n<span class="token punctuation">(</span>?<span class="token operator">&lt;</span>name<span class="token operator">&gt;</span>exp<span class="token punctuation">)</span>  匹配exp,并捕获文本到名称为name的组里，也可以写成<span class="token punctuation">(</span>?<span class="token string">&#39;name&#39;</span>exp<span class="token punctuation">)</span>\n<span class="token punctuation">(</span>?:exp<span class="token punctuation">)</span>       匹配exp,不捕获匹配的文本，也不给此分组分配组号   \n<span class="token punctuation">(</span>?<span class="token operator">=</span>exp<span class="token punctuation">)</span>       匹配exp前面的位置\n<span class="token punctuation">(</span>?<span class="token operator">&lt;=</span>exp<span class="token punctuation">)</span>      匹配exp后面的位置\n<span class="token punctuation">(</span>?<span class="token operator">!</span>exp<span class="token punctuation">)</span>       匹配后面跟的不是exp的位置\n<span class="token punctuation">(</span>?<span class="token operator">&lt;</span><span class="token operator">!</span>exp<span class="token punctuation">)</span>      匹配前面不是exp的位置\n<span class="token punctuation">(</span>?<span class="token comment">#comment)   注释分组不对正则表达式的处理产生任何影响</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="配置url重写规则" tabindex="-1"><a class="header-anchor" href="#配置url重写规则" aria-hidden="true">#</a> 配置URL重写规则</h2><p>在某些应用场景中，后端服务提供的URL与Ingress规则中执行的路径不同，而Ingress访将访问路径直接转发到后端相同路径，如果不配置URL重写规则，所有访问都将返回404。比如如下案例，Ingress规则中配置的是/user/info，而后端服务提供的访问路径是/info,在不配置重写的情况下，会直接转发给后端/user/info与实际提供的访问路径/info不匹配，会直接返回404。接下来咱们用案例的方式进行验证。 <strong>不配置URL重写直接转发：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">cat</span> ingress.yml\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: demo\nspec:\n  rules:\n  - host: demo.kubesre.com\n    http:\n      paths:\n      - path: /\n        pathType: ImplementationSpecific\n        backend:\n          service:\n            name: demo-svc\n            port:\n              number: <span class="token number">8080</span>\n  ingressClassName: nginx\n\n$ kubectl apply <span class="token parameter variable">-f</span> ingress.yml\ningress.networking.k8s.io/demo configured\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>访问验证(/user/info)：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 访问/user/info，可以看出直接返回404</span>\n$ <span class="token function">curl</span> http://demo.kubesre.com/user/info\n<span class="token number">404</span> page not found\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>配置URL重写：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$  <span class="token function">cat</span> ingress.yml\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: demo\n  annotations:\n    nginx.ingress.kubernetes.io/rewrite-target: /<span class="token variable">$2</span>\nspec:\n  rules:\n  - host: demo.kubesre.com\n    http:\n      paths:\n      - path: /user<span class="token punctuation">(</span>/<span class="token operator">|</span>$<span class="token punctuation">)</span><span class="token punctuation">(</span>.*<span class="token punctuation">)</span>\n        pathType: ImplementationSpecific\n        backend:\n          service:\n            name: demo-svc\n            port:\n              number: <span class="token number">8080</span>\n  ingressClassName: nginx\n\n$ kubectl apply <span class="token parameter variable">-f</span> ingress.yml\ningress.networking.k8s.io/demo configured\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>访问验证(/user/info)：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 访问/user/info，可以看出直接正常返回了</span>\n$ <span class="token function">curl</span>  http://demo.kubesre.com/user/info\n<span class="token punctuation">{</span><span class="token string">&quot;message&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;云原生运维圈！&quot;</span><span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注解：</strong></p><p>以上案例Ingress重写是通过<code>**nginx.ingress.kubernetes.io/rewrite-target**</code><strong>注解实现不同路径的重写规则。</strong></p><p>占位符$2表示将第二个括号即(.*)中匹配到的所有字符填写到<code>nginx.ingress.kubernetes.io/rewrite-target</code>注解中。 想必大家都知道Ingress是基于Nginx开发的，此时是通过Ingress CRD进行创建的重写配置，其本质也是修改Nginx配置文件的，此时从Ingress里的Nginx拷贝出来的配置如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>	server <span class="token punctuation">{</span>\n		server_name demo.kubesre.com <span class="token punctuation">;</span>\n\n		listen <span class="token number">80</span>  <span class="token punctuation">;</span>\n		listen <span class="token punctuation">[</span>::<span class="token punctuation">]</span>:80  <span class="token punctuation">;</span>\n		listen <span class="token number">443</span>  ssl http2 <span class="token punctuation">;</span>\n		listen <span class="token punctuation">[</span>::<span class="token punctuation">]</span>:443  ssl http2 <span class="token punctuation">;</span>\n\n		<span class="token builtin class-name">set</span> <span class="token variable">$proxy_upstream_name</span> <span class="token string">&quot;-&quot;</span><span class="token punctuation">;</span>\n\n		ssl_certificate_by_lua_block <span class="token punctuation">{</span>\n			certificate.call<span class="token punctuation">(</span><span class="token punctuation">)</span>\n		<span class="token punctuation">}</span>\n\n		location ~* <span class="token string">&quot;^/user(/|$)(.*)&quot;</span> <span class="token punctuation">{</span>\n\n			<span class="token builtin class-name">set</span> <span class="token variable">$namespace</span>      <span class="token string">&quot;default&quot;</span><span class="token punctuation">;</span>\n			rewrite <span class="token string">&quot;(?i)/user(/|$)(.*)&quot;</span> /<span class="token variable">$2</span> <span class="token builtin class-name">break</span><span class="token punctuation">;</span>\n			proxy_pass http://upstream_balancer<span class="token punctuation">;</span>\n\n			proxy_redirect     off<span class="token punctuation">;</span>\n   <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="高级url重写规则" tabindex="-1"><a class="header-anchor" href="#高级url重写规则" aria-hidden="true">#</a> 高级URL重写规则</h2><p>对于一些复杂的重写规则需求，可以通过如下注解来实现，其本质也是修改Nginx配置文件。</p><ul><li>nginx.ingress.kubernetes.io/server-snippet：在nginx.conf的“server”字段中添加自定义配置。</li><li>nginx.ingress.kubernetes.io/configuration-snippet：在nginx.conf的“location”字段中添加自定义配置。</li></ul><p><strong>URL重写Flag参数：</strong></p><ul><li>last：表示本条规则匹配完成后继续向下匹配。</li><li>break：表示本条规则匹配完成后停止匹配。</li><li>redirect：表示临时重定向，返回状态码302。</li><li>permanent：表示永久重定向，返回状态码301。</li></ul><p><strong>重定向就是将网页自动转向重定向：</strong></p><ul><li>301永久性重定向：新网址完全继承旧网址，旧网址的SEO网络搜索引擎的排名等完全清零</li><li>301重定向是网页更改地址后对搜索引擎友好的最好方法，只要不是暂时搬移的情况，都建议使用301来做转址。</li><li>302临时性重定向：对旧网址没有影响，但新网址不会有排名</li><li>搜索引擎爬虫会抓取新的内容而保留旧的网址</li></ul><p><strong>配置Location：</strong></p><p>通过Ingress注解<code>nginx.ingress.kubernetes.io/server-snippet</code>配置location，访问/sre，返回401错误代码，案例如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">cat</span> sre.yml\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  annotations:\n    nginx.ingress.kubernetes.io/server-snippet: <span class="token operator">|</span>\n       location /sre <span class="token punctuation">{</span>\n        <span class="token builtin class-name">return</span> <span class="token number">401</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n  name: demo-redirect\nspec:\n  rules:\n  - host: demo.kubesre.com\n    http:\n      paths:\n      - path: /\n        pathType: ImplementationSpecific\n        backend:\n          service:\n            name: demo-svc\n            port:\n              number: <span class="token number">8080</span>\n  ingressClassName: nginx\n\n$ kubectl apply <span class="token parameter variable">-f</span> <span class="token number">1</span>.yml\ningress.networking.k8s.io/demo-redirect configured\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>访问验证：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 表示验证成功</span>\n$ <span class="token function">curl</span> http://demo.kubesre.com/sre/\n<span class="token operator">&lt;</span>html<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span>head<span class="token operator">&gt;</span><span class="token operator">&lt;</span>title<span class="token operator">&gt;</span><span class="token number">401</span> Authorization Required<span class="token operator">&lt;</span>/title<span class="token operator">&gt;</span><span class="token operator">&lt;</span>/head<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span>center<span class="token operator">&gt;</span><span class="token operator">&lt;</span>h<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span><span class="token number">401</span> Authorization Required<span class="token operator">&lt;</span>/h<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span><span class="token operator">&lt;</span>/center<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span>hr<span class="token operator">&gt;</span><span class="token operator">&lt;</span>center<span class="token operator">&gt;</span>nginx<span class="token operator">&lt;</span>/center<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span>/body<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span>/html<span class="token operator">&gt;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>URL重定向（permanent）：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cat</span>  demo-permanent.yml\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  annotations:\n    nginx.ingress.kubernetes.io/configuration-snippet: <span class="token operator">|</span>\n      rewrite ^/$ https://www.baidu.com redirect<span class="token punctuation">;</span>\n  name: demo-redirect\nspec:\n  rules:\n  - host: demo.kubesre.com\n    http:\n      paths:\n      - path: /\n        pathType: ImplementationSpecific\n        backend:\n          service:\n            name: demo-svc\n            port:\n              number: <span class="token number">8080</span>\n  ingressClassName: nginx\n\n$ kubectl apply <span class="token parameter variable">-f</span> demo-permanent.yml\ningress.networking.k8s.io/demo-permanent created\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>访问验证：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 301永久重定向，浏览器器地址栏会显示跳转后的URL地址,真实效果可以通过浏览器访问测试验证</span>\n$ <span class="token function">curl</span> http://demo.kubesre.com\n<span class="token operator">&lt;</span>html<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span>head<span class="token operator">&gt;</span><span class="token operator">&lt;</span>title<span class="token operator">&gt;</span><span class="token number">301</span> Moved Permanently<span class="token operator">&lt;</span>/title<span class="token operator">&gt;</span><span class="token operator">&lt;</span>/head<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span>center<span class="token operator">&gt;</span><span class="token operator">&lt;</span>h<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span><span class="token number">301</span> Moved Permanently<span class="token operator">&lt;</span>/h<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span><span class="token operator">&lt;</span>/center<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span>hr<span class="token operator">&gt;</span><span class="token operator">&lt;</span>center<span class="token operator">&gt;</span>nginx<span class="token operator">&lt;</span>/center<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span>/body<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span>/html<span class="token operator">&gt;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>URL重定向（redirect）：</strong></p><p>通过URL重定向，访问/test/info,直接重定向302跳转到/user/info。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">cat</span> demo-redirect.yml\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  annotations:\n    nginx.ingress.kubernetes.io/configuration-snippet: <span class="token operator">|</span>\n       rewrite ^/test/<span class="token punctuation">(</span>.*<span class="token punctuation">)</span>$ /user/<span class="token variable">$1</span> redirect<span class="token punctuation">;</span>\n  name: demo-redirect\nspec:\n  rules:\n  - host: demo.kubesre.com\n    http:\n      paths:\n      - path: /test\n        pathType: ImplementationSpecific\n        backend:\n          service:\n            name: demo-svc\n            port:\n              number: <span class="token number">8080</span>\n  ingressClassName: nginx\n  \n$ kubectl apply <span class="token parameter variable">-f</span> demo-redirect.yml\ningress.networking.k8s.io/demo-redirect created\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>访问验证：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 302 说明已经重定向了，实际效果可以通过浏览器访问查看</span>\n$ <span class="token function">curl</span>  http://demo.kubesre.com/test/info\n<span class="token operator">&lt;</span>html<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span>head<span class="token operator">&gt;</span><span class="token operator">&lt;</span>title<span class="token operator">&gt;</span><span class="token number">302</span> Found<span class="token operator">&lt;</span>/title<span class="token operator">&gt;</span><span class="token operator">&lt;</span>/head<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span>center<span class="token operator">&gt;</span><span class="token operator">&lt;</span>h<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span><span class="token number">302</span> Found<span class="token operator">&lt;</span>/h<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span><span class="token operator">&lt;</span>/center<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span>hr<span class="token operator">&gt;</span><span class="token operator">&lt;</span>center<span class="token operator">&gt;</span>nginx<span class="token operator">&lt;</span>/center<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span>/body<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span>/html<span class="token operator">&gt;</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>URL重写（last）：</strong></p><p>通过URL重写实现，访问/sre,返回的是/kube的结果，可以利用重写Flag last参数，当URL重写后，会发送一个新的请求，再次进入server块，重试location匹配，匹配成功直接把结果直接返回。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">cat</span> sre.yml\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  annotations:\n    nginx.ingress.kubernetes.io/configuration-snippet: <span class="token operator">|</span>\n      rewrite ^/sre /kube last<span class="token punctuation">;</span>\n    nginx.ingress.kubernetes.io/server-snippet: <span class="token operator">|</span>\n       location /sre <span class="token punctuation">{</span>\n        <span class="token builtin class-name">return</span> <span class="token number">401</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        location /kube <span class="token punctuation">{</span>\n        <span class="token builtin class-name">return</span> <span class="token number">403</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n  name: demo-redirect\nspec:\n  rules:\n  - host: demo.kubesre.com\n    http:\n      paths:\n      - path: /sre\n        pathType: ImplementationSpecific\n        backend:\n          service:\n            name: demo-svc\n            port:\n              number: <span class="token number">8080</span>\n  ingressClassName: nginx\n\n$ kubectl apply <span class="token parameter variable">-f</span> sre.yml\ningress.networking.k8s.io/demo-redirect configured\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>访问验证：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 访问/sre，则返回/kube结果403</span>\n$ <span class="token function">curl</span> http://demo.kubesre.com/sre/\n<span class="token operator">&lt;</span>html<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span>head<span class="token operator">&gt;</span><span class="token operator">&lt;</span>title<span class="token operator">&gt;</span><span class="token number">403</span> Forbidden<span class="token operator">&lt;</span>/title<span class="token operator">&gt;</span><span class="token operator">&lt;</span>/head<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span>center<span class="token operator">&gt;</span><span class="token operator">&lt;</span>h<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span><span class="token number">403</span> Forbidden<span class="token operator">&lt;</span>/h<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span><span class="token operator">&lt;</span>/center<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span>hr<span class="token operator">&gt;</span><span class="token operator">&lt;</span>center<span class="token operator">&gt;</span>nginx<span class="token operator">&lt;</span>/center<span class="token operator">&gt;</span>\n<span class="token operator">&lt;</span>/body<span class="token operator">&gt;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>本文介绍了URL重写的概念，并通过实际案例的方式讲解了URL重写的方方面面，下一章将讲解Ingress更多企业级实战，请敬请期待！</p>', 50);
const _hoisted_51 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache) {
  return openBlock(), createElementBlock("div", null, _hoisted_51);
}
const URLzhongxieyugaojiwanfa_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "URLzhongxieyugaojiwanfa.html.vue"]]);
export {
  URLzhongxieyugaojiwanfa_html as default
};
