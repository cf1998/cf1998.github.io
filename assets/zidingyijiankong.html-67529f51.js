import { _ as _export_sfc, o as openBlock, c as createElementBlock, a as createStaticVNode } from "./app-53847742.js";
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h2 id="上篇回顾" tabindex="-1"><a class="header-anchor" href="#上篇回顾" aria-hidden="true">#</a> 上篇回顾</h2><p>上篇文章我们主要是讲解了使用prometheus-operator来进行部署，其中大部分需要监控的指标我们都可以收集到，但是也是有不完善的地方，例如我们自定义的exporter。本篇文章将会讲解如何自定义监控。</p><h2 id="prometheues-opeartor-架构图" tabindex="-1"><a class="header-anchor" href="#prometheues-opeartor-架构图" aria-hidden="true">#</a> Prometheues Opeartor 架构图</h2><p><img src="https://img.kubesre.com/kubesre/20230818/1.png" alt=""></p><p>此架构图可以看出prometheus数据源主要是来自于ServiceMonitor，所以我们也按照该方案部署一个ServiceMonitor。接下来的案例以监控MySQL为例。</p><h2 id="环境概述" tabindex="-1"><a class="header-anchor" href="#环境概述" aria-hidden="true">#</a> 环境概述</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ kubectl get nodes\nNAME               STATUS   ROLES                  AGE   VERSION\nk8s-master-50.57   Ready    control-plane,master   77d   v1.20.5\nk8s-node-50.58     Ready    <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>                 77d   v1.20.5\nk8s-node-50.59     Ready    <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>                 77d   v1.20.5\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="实验介绍" tabindex="-1"><a class="header-anchor" href="#实验介绍" aria-hidden="true">#</a> 实验介绍</h2><ul><li>监控对象：MySQL</li><li>exporter：mysql_exporter</li></ul><h2 id="部署-mysql-exporter" tabindex="-1"><a class="header-anchor" href="#部署-mysql-exporter" aria-hidden="true">#</a> 部署 MySQL_Exporter</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">cat</span>   mysql_exporter.yaml\n\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: mysql-exporter\n  namespace: kube-ops\n  labels:\n    k8s-app: mysql-exporter\nspec:\n  replicas: <span class="token number">1</span>\n  selector:\n    matchLabels:\n      k8s-app: mysql-exporter\n  strategy:\n    rollingUpdate:\n      maxSurge: <span class="token number">70</span>%\n      maxUnavailable: <span class="token number">25</span>%\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        k8s-app: mysql-exporter\n    spec:\n      terminationGracePeriodSeconds: <span class="token number">60</span>\n      containers:\n      - name: mysql-exporter\n        image: prom/mysqld-exporter\n        imagePullPolicy: IfNotPresent\n        env:\n        - name: DATA_SOURCE_NAME\n          value: <span class="token string">&#39;exporter:aMxxxxx@(192.168.70.204:3306)/&#39;</span> <span class="token comment"># user:password@(hostname:3306)/</span>\n        readinessProbe:\n          httpGet:\n            port: <span class="token number">9104</span>\n            path: /health\n          initialDelaySeconds: <span class="token number">30</span>\n          periodSeconds: <span class="token number">10</span>\n          timeoutSeconds: <span class="token number">30</span>\n          failureThreshold: <span class="token number">10</span>\n        livenessProbe:\n          httpGet:\n            port: <span class="token number">9104</span>\n            path: /health\n          initialDelaySeconds: <span class="token number">30</span>\n          periodSeconds: <span class="token number">10</span>\n          timeoutSeconds: <span class="token number">3</span>\n          failureThreshold: <span class="token number">1</span>\n        resources:\n          limits:\n            cpu: 500m\n            memory: 1Gi\n          requests:\n            cpu: 100m\n            memory: 512Mi\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: mysql-exporter\n  namespace: kube-ops\n  labels:\n    k8s-app: mysql-exporter\nspec:\n  selector:\n    k8s-app: mysql-exporter\n  ports:\n  - name: mysql-exporter\n    port: <span class="token number">9104</span>\n    protocol: TCP\n  type: ClusterIP\n\n<span class="token comment"># 创建mysql_export</span>\n$ kubectl apply <span class="token parameter variable">-f</span>   mysql_exporter.yaml\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注：连接mysql使用的账号密码需要提前创建，建议只赋予查看权限</p></blockquote><h2 id="查看mysql-exporter状态" tabindex="-1"><a class="header-anchor" href="#查看mysql-exporter状态" aria-hidden="true">#</a> 查看MySQL_Exporter状态</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ kubectl get pod <span class="token parameter variable">-n</span> kube-ops <span class="token parameter variable">-o</span> wide \nNAME                             READY   STATUS    RESTARTS   AGE   IP              NODE             NOMINATED NODE   READINESS GATES\nmysql-exporter-dc5c494ff-2fgqq   <span class="token number">1</span>/1     Running   <span class="token number">0</span>          89m   <span class="token number">100.244</span>.1.102   k8s-node-50.58   <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>           <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>\n\n<span class="token comment"># 出现如上状态说明是正常的</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="查看mysql-metrics" tabindex="-1"><a class="header-anchor" href="#查看mysql-metrics" aria-hidden="true">#</a> 查看MySQL Metrics</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># curl 100.244.1.102:9104/metrics</span>\n<span class="token comment">### 省略</span>\n<span class="token comment"># TYPE mysql_info_schema_innodb_cmpmem_relocation_time_seconds_total counter</span>\nmysql_info_schema_innodb_cmpmem_relocation_time_seconds_total<span class="token punctuation">{</span>buffer_pool<span class="token operator">=</span><span class="token string">&quot;0&quot;</span>,page_size<span class="token operator">=</span><span class="token string">&quot;1024&quot;</span><span class="token punctuation">}</span> <span class="token number">0</span>\nmysql_info_schema_innodb_cmpmem_relocation_time_seconds_total<span class="token punctuation">{</span>buffer_pool<span class="token operator">=</span><span class="token string">&quot;0&quot;</span>,page_size<span class="token operator">=</span><span class="token string">&quot;16384&quot;</span><span class="token punctuation">}</span> <span class="token number">0</span>\nmysql_info_schema_innodb_cmpmem_relocation_time_seconds_total<span class="token punctuation">{</span>buffer_pool<span class="token operator">=</span><span class="token string">&quot;0&quot;</span>,page_size<span class="token operator">=</span><span class="token string">&quot;2048&quot;</span><span class="token punctuation">}</span> <span class="token number">0</span>\nmysql_info_schema_innodb_cmpmem_relocation_time_seconds_total<span class="token punctuation">{</span>buffer_pool<span class="token operator">=</span><span class="token string">&quot;0&quot;</span>,page_size<span class="token operator">=</span><span class="token string">&quot;4096&quot;</span><span class="token punctuation">}</span> <span class="token number">0</span>\nmysql_info_schema_innodb_cmpmem_relocation_time_seconds_total<span class="token punctuation">{</span>buffer_pool<span class="token operator">=</span><span class="token string">&quot;0&quot;</span>,page_size<span class="token operator">=</span><span class="token string">&quot;8192&quot;</span><span class="token punctuation">}</span> <span class="token number">0</span>\nmysql_info_schema_innodb_cmpmem_relocation_time_seconds_total<span class="token punctuation">{</span>buffer_pool<span class="token operator">=</span><span class="token string">&quot;1&quot;</span>,page_size<span class="token operator">=</span><span class="token string">&quot;1024&quot;</span><span class="token punctuation">}</span> <span class="token number">0</span>\nmysql_info_schema_innodb_cmpmem_relocation_time_seconds_total<span class="token punctuation">{</span>buffer_pool<span class="token operator">=</span><span class="token string">&quot;1&quot;</span>,page_size<span class="token operator">=</span><span class="token string">&quot;16384&quot;</span><span class="token punctuation">}</span> <span class="token number">0</span>\nmysql_info_schema_innodb_cmpmem_relocation_time_seconds_total<span class="token punctuation">{</span>buffer_pool<span class="token operator">=</span><span class="token string">&quot;1&quot;</span>,page_size<span class="token operator">=</span><span class="token string">&quot;2048&quot;</span><span class="token punctuation">}</span> <span class="token number">0</span>\nmysql_info_schema_innodb_cmpmem_relocation_time_seconds_total<span class="token punctuation">{</span>buffer_pool<span class="token operator">=</span><span class="token string">&quot;1&quot;</span>,page_size<span class="token operator">=</span><span class="token string">&quot;4096&quot;</span><span class="token punctuation">}</span> <span class="token number">0</span>\nmysql_info_schema_innodb_cmpmem_relocation_time_seconds_total<span class="token punctuation">{</span>buffer_pool<span class="token operator">=</span><span class="token string">&quot;1&quot;</span>,page_size<span class="token operator">=</span><span class="token string">&quot;8192&quot;</span><span class="token punctuation">}</span> <span class="token number">0</span>\n<span class="token comment">### 省略</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="部署-servicemonitor" tabindex="-1"><a class="header-anchor" href="#部署-servicemonitor" aria-hidden="true">#</a> 部署 ServiceMonitor</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">cat</span>  servicemonitor.yaml\napiVersion: monitoring.coreos.com/v1\nkind: ServiceMonitor\nmetadata:\n  name: mysql-exporter  <span class="token comment"># ServiceMonitor名称</span>\n  namespace: monitoring <span class="token comment"># ServiceMonitor所在名称空间</span>\nspec:\n  endpoints:  <span class="token comment"># prometheus所采集Metrics地址配置，endpoints为一个数组，可以创建多个，但是每个endpoints包含三个字段interval、path、port</span>\n    - interval: 15s <span class="token comment"># prometheus采集数据的周期，单位为秒</span>\n      path: /metrics <span class="token comment"># prometheus采集数据的路径</span>\n      port: mysql-exporter <span class="token comment"># prometheus采集数据的端口，这里为port的name，主要是通过spec.selector中选择对应的svc，在选中的svc中匹配该端口</span>\n  namespaceSelector: <span class="token comment"># 需要发现svc的范围</span>\n    any: <span class="token boolean">true</span>     <span class="token comment"># 有且仅有一个值true，当该字段被设置时，表示监听所有符合selector所选择的svc</span>\n  selector:\n    matchLabels:  <span class="token comment"># 选择svc的标签</span>\n      k8s-app: mysql-exporter\n  \n<span class="token comment"># 创建servicemonitor对象</span>\n$ kubectl apply <span class="token parameter variable">-f</span>  servicemonitor.yaml\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注：这里的namespaceSelector中我们也可以指定名称空间，如下：</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>namespaceSelector:\n  matchNames:\n  - default\n  - kube-ops\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>此时就可以指定在default、kube-ops名称空间中对service进行匹配</p></blockquote><h2 id="修改prometheus-clusterrole-yaml" tabindex="-1"><a class="header-anchor" href="#修改prometheus-clusterrole-yaml" aria-hidden="true">#</a> 修改Prometheus ClusterRole.yaml</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># cat  prometheus-clusterRole.yaml</span>\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  labels:\n    app.kubernetes.io/component: prometheus\n    app.kubernetes.io/name: prometheus\n    app.kubernetes.io/part-of: kube-prometheus\n    app.kubernetes.io/version: <span class="token number">2.26</span>.0\n  name: prometheus-k8s\nrules:\n- apiGroups:\n  - <span class="token string">&quot;&quot;</span>\n  resources:\n  - nodes/metrics\n  - services\n  - endpoints\n  - pods\n  verbs:\n  - get\n  - list\n  - <span class="token function">watch</span>\n- nonResourceURLs:\n  - /metrics\n  verbs:\n  - get\n  \n<span class="token comment"># kubectl apply -f  prometheus-clusterRole.yaml</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="查看prometheus中的targets" tabindex="-1"><a class="header-anchor" href="#查看prometheus中的targets" aria-hidden="true">#</a> 查看prometheus中的targets</h2><p><img src="https://img.kubesre.com/kubesre/20230818/2.png" alt=""></p><h2 id="grafana加载dashboard" tabindex="-1"><a class="header-anchor" href="#grafana加载dashboard" aria-hidden="true">#</a> Grafana加载Dashboard</h2><p>点击load，加载即可 <img src="https://img.kubesre.com/kubesre/20230818/3.png" alt=""> 可以看到如下内容，说明成功了！ <img src="https://img.kubesre.com/kubesre/20230818/4.png" alt=""></p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>本文章讲解了自定义监控以及修改ClusterRole资源，下期内容：Prometheus自动发现。</p>', 29);
const _hoisted_30 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache) {
  return openBlock(), createElementBlock("div", null, _hoisted_30);
}
const zidingyijiankong_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "zidingyijiankong.html.vue"]]);
export {
  zidingyijiankong_html as default
};
