import { _ as _export_sfc, o as openBlock, c as createElementBlock, a as createStaticVNode } from "./app-9ba53931.js";
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h2 id="背景" tabindex="-1"><a class="header-anchor" href="#背景" aria-hidden="true">#</a> 背景</h2><p>现如今，越来越多的应用采用了微服务架构，这也导致了应用数量相比传统模式更多，管理更加复杂，发布更加频繁，如果直接将新版本上线发布给全部用户。一旦遇到线上事故（或BUG），对用户的影响极大，解决问题周期较长，甚至有时不得不回滚到前一版本，严重影响了用户体验。为了保证整体系统的稳定，风险降到最低，我们可以采用灰度发布与蓝绿发布等不同的发布方式。</p><h2 id="什么是金丝雀发布" tabindex="-1"><a class="header-anchor" href="#什么是金丝雀发布" aria-hidden="true">#</a> 什么是金丝雀发布</h2><p>金丝雀发布，又称灰度发布，是指通过让小部份用户流量引入的新版本进行测试，如果一切顺利，则可以增加（可能逐渐增加）百分比，逐步替换旧版本。如在过程中出现任何问题，则可以中止并快速回滚到旧版本。最简单的方式是随机选择百分比请求到金丝雀版本，但在更复杂的方案下，则可以基于请求的内容、特定范围的用户或其他属性等。 <img src="https://img.kubesre.com/kubesre/20230813/金丝雀发布.png" alt="金丝雀发布.png"></p><h2 id="什么是蓝绿发布" tabindex="-1"><a class="header-anchor" href="#什么是蓝绿发布" aria-hidden="true">#</a> 什么是蓝绿发布</h2><p>蓝绿发布，提供了一种零宕机的部署方式，是一种以可观测的方式发布应用的方式，目的减少发布过程中停止时间。在保留老版本的同时部署新版本，将两个版本同时在线，新版本和老版本相互热备，通过切换路由权重的方式（非0即100）实现应用的不同版本上线或者下线，如果有问题可以快速地回滚到老版本。这样做的好处是无需停机，并且风险较小。 <img src="https://img.kubesre.com/kubesre/20230813/蓝绿发布.png" alt="蓝绿发布.png"></p><h2 id="示例应用部署" tabindex="-1"><a class="header-anchor" href="#示例应用部署" aria-hidden="true">#</a> 示例应用部署</h2><p>部署示例版本：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">cat</span> demo.yml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: demo\n  labels:\n    app: demo\nspec:\n  replicas: <span class="token number">1</span>\n  selector:\n    matchLabels:\n      app: demo\n  template:\n    metadata:\n      labels:\n        app: demo\n    spec:\n      containers:\n      - name: demo\n        imagePullPolicy: Always\n        image: registry.cn-shanghai.aliyuncs.com/kubesre01/demo:v1\n        ports:\n        - containerPort: <span class="token number">8080</span>\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: demo-svc\nspec:\n  type: ClusterIP\n  selector:\n    app: demo\n  ports:\n    - port: <span class="token number">8080</span>\n      targetPort: <span class="token number">8080</span>\n$ kubectl apply <span class="token parameter variable">-f</span> demo.yml\ndeployment.apps/demo created\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>部署新版本：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">cat</span> demo_new.yml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: demo-new\n  labels:\n    app: demo-new\nspec:\n  replicas: <span class="token number">1</span>\n  selector:\n    matchLabels:\n      app: demo-new\n  template:\n    metadata:\n      labels:\n        app: demo-new\n    spec:\n      containers:\n      - name: demo-new\n        imagePullPolicy: Always\n        image: registry.cn-shanghai.aliyuncs.com/kubesre01/demo:v2\n        ports:\n        - containerPort: <span class="token number">8080</span>\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: demo-new-svc\nspec:\n  type: ClusterIP\n  selector:\n    app: demo-new\n  ports:\n    - port: <span class="token number">8080</span>\n      targetPort: <span class="token number">8080</span>\n\n$ kubectl apply <span class="token parameter variable">-f</span> demo_new.yml\ndeployment.apps/demo_new created\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建Ingress记录：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">cat</span> demo-ingress.yml\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: demo\nspec:\n  rules:\n  - host: demo.kubesre.com\n    http:\n      paths:\n      - path: /info\n        pathType: Prefix\n        backend:\n          service:\n            name: demo-svc \n            port:\n              number: <span class="token number">8080</span>\n  ingressClassName: nginx\n\n$ kubectl apply <span class="token parameter variable">-f</span> demo-ingress.yml\ningress.networking.k8s.io/demo-ingress created\n\n<span class="token comment"># 访问如下内容说明部署成功！</span>\n$ <span class="token function">curl</span>  http://demo.kubesre.com/info\n<span class="token punctuation">{</span><span class="token string">&quot;message&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;云原生运维圈！&quot;</span><span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>到此为止，示例应用与新版本已部署完毕！</p><h2 id="基于客户端请求头的流量切分" tabindex="-1"><a class="header-anchor" href="#基于客户端请求头的流量切分" aria-hidden="true">#</a> 基于客户端请求头的流量切分</h2><p>假设线上已运行了一套对外提供的七层demo应用，此时开发了一些新的功能，需要上线新版本demo应用，但是又不想直接替换成新版本demo应用，而是希望将请求头包含<code>user=kubesre</code>的客户端请求转发到新版本demo应用中，进行验证测试新版本demo应用，等测试验证通过并稳定后，可将所有流量从老版本demo应用切换到新版本demo应用中，再平滑地将老版本demo应用下线。 创建新版本Ingress：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">cat</span> demo-new-canary.yml\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: demo-new-canary\n  annotations:\n    <span class="token comment"># 开启Canary。</span>\n    nginx.ingress.kubernetes.io/canary: <span class="token string">&quot;true&quot;</span>\n    <span class="token comment"># 请求头为user</span>\n    nginx.ingress.kubernetes.io/canary-by-header: <span class="token string">&quot;user&quot;</span>\n    <span class="token comment"># 请求头user的值为kubesre时，请求才会被路由到新版本服务new-new中。</span>\n    nginx.ingress.kubernetes.io/canary-by-header-value: <span class="token string">&quot;kubesre&quot;</span>\n\nspec:\n  rules:\n  - host: demo.kubesre.com\n    http:\n      paths:\n      - path: /info\n        pathType: Prefix\n        backend:\n          service:\n            name: demo-new-svc\n            port:\n              number: <span class="token number">8080</span>\n  ingressClassName: nginx\n\n$ kubectl apply <span class="token parameter variable">-f</span> demo-new-canary.yml\ningress.networking.k8s.io/demo-new-canary created\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>测试验证：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 请求头为user: kubesre，访问到新的版本</span>\n$ <span class="token function">curl</span> <span class="token parameter variable">-H</span> <span class="token string">&quot;user: kubesre&quot;</span> http://demo.kubesre.com/info\n<span class="token punctuation">{</span><span class="token string">&quot;message&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;云原生运维圈！新版本&quot;</span><span class="token punctuation">}</span>\n\n<span class="token comment"># 其他则访问到老的版本</span>\n$ <span class="token function">curl</span>  http://demo.kubesre.com/info\n<span class="token punctuation">{</span><span class="token string">&quot;message&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;云原生运维圈！&quot;</span><span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="基于客户端来源ip的流量切分" tabindex="-1"><a class="header-anchor" href="#基于客户端来源ip的流量切分" aria-hidden="true">#</a> 基于客户端来源IP的流量切分</h2><p>假设线上已运行了一套对外提供的七层demo应用，此时开发了一些新的功能，需要上线新版本demo应用，又不想直接替换成新版本demo应用，而是只希望公司内部人员能访问到新版本demo应用中，进行测试验证新版本demo应用，非公司内部人员访问还是访问到老版本应用中。等公司内部人员测试验证通过并稳定后，可将所有流量从老版本demo应用切换到新版本demo应用中，再平滑地将老版本demo应用下线。 创建新版本Ingress：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">cat</span> demo-new-canary.yml\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: demo-new-canary\n  annotations:\n    nginx.ingress.kubernetes.io/canary: <span class="token string">&quot;true&quot;</span>\n    nginx.ingress.kubernetes.io/canary-by-header: <span class="token string">&quot;X-Forwarded-For&quot;</span>\n    <span class="token comment"># 假设客户端来源IP为123.456.789.123</span>\n    nginx.ingress.kubernetes.io/canary-by-header-value: <span class="token string">&quot;123.456.789.123&quot;</span>\n    \nspec:\n  rules:\n  - host: demo.kubesre.com\n    http:\n      paths:\n      - path: /info\n        pathType: Prefix\n        backend:\n          service:\n            name: demo-new-svc\n            port:\n              number: <span class="token number">8080</span>\n  ingressClassName: nginx\n\n$ kubectl apply <span class="token parameter variable">-f</span> demo-new-canary.yml\ningress.networking.k8s.io/demo-new-canary created\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>测试验证：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 通过请求头模拟来源IP，真实环境不需要</span>\n$ <span class="token function">curl</span> <span class="token parameter variable">-H</span> <span class="token string">&quot;X-Forwarded-For:123.456.789.123&quot;</span> http://demo.kubesre.com/info\n<span class="token punctuation">{</span><span class="token string">&quot;message&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;云原生运维圈！新版本&quot;</span><span class="token punctuation">}</span>\n\n<span class="token comment"># 其他则访问到老的版本</span>\n$ <span class="token function">curl</span>  http://demo.kubesre.com/info\n<span class="token punctuation">{</span><span class="token string">&quot;message&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;云原生运维圈！&quot;</span><span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="基于服务权重的流量切分" tabindex="-1"><a class="header-anchor" href="#基于服务权重的流量切分" aria-hidden="true">#</a> 基于服务权重的流量切分</h2><p>假设线上已运行了一套对外提供的七层demo应用，此时修复了一些问题，需要上线新版本demo应用，又不想直接替换成新版本demo应用，而是希望将20%的流量切换新版本。待运行一段时间稳定后，可将所有流量从老版本demo应用切换到新版本demo应用中，再平滑地将老版本demo应用下线。 创建新版本Ingress：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">cat</span> demo-new-canary.yml\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: demo-new-canary\n  annotations:\n    nginx.ingress.kubernetes.io/canary: <span class="token string">&quot;true&quot;</span>\n    nginx.ingress.kubernetes.io/canary-by-header: <span class="token string">&quot;X-Forwarded-For&quot;</span>\n    <span class="token comment"># 将20%的流量转发到新版本</span>\n    nginx.ingress.kubernetes.io/canary-weight: <span class="token string">&quot;20&quot;</span>\n    \nspec:\n  rules:\n  - host: demo.kubesre.com\n    http:\n      paths:\n      - path: /info\n        pathType: Prefix\n        backend:\n          service:\n            name: demo-new-svc\n            port:\n              number: <span class="token number">8080</span>\n  ingressClassName: nginx\n\n$ kubectl apply <span class="token parameter variable">-f</span> demo-new-canary.yml\ningress.networking.k8s.io/demo-new-canary created\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>测试验证：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 可以看出，有4/20的几率由新版本服务响应，符合20%服务权重的设置。</span>\n$ <span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">..</span><span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token keyword">do</span> <span class="token function">curl</span> http://demo.kubesre.com/info<span class="token punctuation">;</span> <span class="token keyword">done</span><span class="token punctuation">;</span>\n<span class="token punctuation">{</span><span class="token string">&quot;message&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;云原生运维圈！&quot;</span><span class="token punctuation">}</span>\n<span class="token punctuation">{</span><span class="token string">&quot;message&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;云原生运维圈！&quot;</span><span class="token punctuation">}</span>\n<span class="token punctuation">{</span><span class="token string">&quot;message&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;云原生运维圈！&quot;</span><span class="token punctuation">}</span>\n<span class="token punctuation">{</span><span class="token string">&quot;message&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;云原生运维圈！&quot;</span><span class="token punctuation">}</span>\n<span class="token punctuation">{</span><span class="token string">&quot;message&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;云原生运维圈！新版本&quot;</span><span class="token punctuation">}</span>\n<span class="token punctuation">{</span><span class="token string">&quot;message&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;云原生运维圈！&quot;</span><span class="token punctuation">}</span>\n<span class="token punctuation">{</span><span class="token string">&quot;message&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;云原生运维圈！&quot;</span><span class="token punctuation">}</span>\n<span class="token punctuation">{</span><span class="token string">&quot;message&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;云原生运维圈！新版本&quot;</span><span class="token punctuation">}</span>\n<span class="token punctuation">{</span><span class="token string">&quot;message&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;云原生运维圈！&quot;</span><span class="token punctuation">}</span>\n<span class="token punctuation">{</span><span class="token string">&quot;message&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;云原生运维圈！新版本&quot;</span><span class="token punctuation">}</span><span class="token punctuation">{</span>\n<span class="token string">&quot;message&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;云原生运维圈！新版本&quot;</span><span class="token punctuation">}</span>\n<span class="token punctuation">{</span><span class="token string">&quot;message&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;云原生运维圈！&quot;</span><span class="token punctuation">}</span>\n<span class="token punctuation">{</span><span class="token string">&quot;message&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;云原生运维圈！&quot;</span><span class="token punctuation">}</span>\n<span class="token punctuation">{</span><span class="token string">&quot;message&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;云原生运维圈！&quot;</span><span class="token punctuation">}</span>\n<span class="token punctuation">{</span><span class="token string">&quot;message&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;云原生运维圈！&quot;</span><span class="token punctuation">}</span>\n<span class="token punctuation">{</span><span class="token string">&quot;message&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;云原生运维圈！&quot;</span><span class="token punctuation">}</span>\n<span class="token punctuation">{</span><span class="token string">&quot;message&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;云原生运维圈！&quot;</span><span class="token punctuation">}</span>\n<span class="token punctuation">{</span><span class="token string">&quot;message&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;云原生运维圈！&quot;</span><span class="token punctuation">}</span>\n<span class="token punctuation">{</span><span class="token string">&quot;message&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;云原生运维圈！&quot;</span><span class="token punctuation">}</span>\n<span class="token punctuation">{</span><span class="token string">&quot;message&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;云原生运维圈！&quot;</span><span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="注解说明" tabindex="-1"><a class="header-anchor" href="#注解说明" aria-hidden="true">#</a> 注解说明</h2><p>Nginx Ingress支持通过配置注解（Annotations）来实现不同场景下的发布和测试，可以满足灰度发布、蓝绿发布、A/B测试等业务场景。具体实现过程如下：为服务创建两个Ingress，一个为常规Ingress，另一个为带nginx.ingress.kubernetes.io/canary: &quot;true&quot;注解的Ingress，称为Canary Ingress；为Canary Ingress配置流量切分策略Annotation，两个Ingress相互配合，即可实现多种场景的发布和测试。Nginx Ingress的Annotation支持以下几种规则：</p><ul><li>nginx.ingress.kubernetes.io/canary-by-header基于Header的流量切分，适用于灰度发布。如果请求头中包含指定的header名称，并且值为“always”，就将该请求转发给Canary Ingress定义的对应后端服务。如果值为“never”则不转发，可用于回滚到旧版本。如果为其他值则忽略该annotation，并通过优先级将请求流量分配到其他规则。</li><li>nginx.ingress.kubernetes.io/canary-by-header-value必须与canary-by-header一起使用，可自定义请求头的取值，包含但不限于“always”或“never”。当请求头的值命中指定的自定义值时，请求将会转发给Canary Ingress定义的对应后端服务，如果是其他值则忽略该annotation，并通过优先级将请求流量分配到其他规则。</li><li>nginx.ingress.kubernetes.io/canary-by-header-pattern与canary-by-header-value类似，唯一区别是该annotation用正则表达式匹配请求头的值，而不是某一个固定值。如果该annotation与canary-by-header-value同时存在，该annotation将被忽略。</li><li>nginx.ingress.kubernetes.io/canary-by-cookie基于Cookie的流量切分，适用于灰度发布。与canary-by-header类似，该annotation用于cookie，仅支持“always”和“never”，无法自定义取值。</li><li>nginx.ingress.kubernetes.io/canary-weight基于服务权重的流量切分，适用于蓝绿部署。表示Canary Ingress所分配流量的百分比，取值范围[0-100]。例如，设置为100，表示所有流量都将转发给Canary Ingress对应的后端服务。</li></ul><p><strong>以上注解规则会按优先级进行评估，优先级为：canary-by-header -&gt; canary-by-cookie -&gt; canary-weight。</strong></p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>本文介绍了金丝雀发布与蓝绿发布，并以企业案例的方式讲解了不同的场景使用什么样的发布方式，下一章将介绍Ingress 证书管理与双向认证，请敬请期待！</p>', 35);
const _hoisted_36 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache) {
  return openBlock(), createElementBlock("div", null, _hoisted_36);
}
const jinsiquefabuyulanlvfabu_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "jinsiquefabuyulanlvfabu.html.vue"]]);
export {
  jinsiquefabuyulanlvfabu_html as default
};
