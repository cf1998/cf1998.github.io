import { _ as _export_sfc, o as openBlock, c as createElementBlock, a as createStaticVNode } from "./app-ac7ac36b.js";
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h2 id="什么是ingress" tabindex="-1"><a class="header-anchor" href="#什么是ingress" aria-hidden="true">#</a> 什么是Ingress</h2><p>当你在Kubernetes集群中运行多个应用程序时，每个应用程序都有自己的服务。为了让外部用户访问这些应用程序，就好像他们访问网站一样，我们需要一种方法来管理流量的分配和路由。这就是Ingress的作用。 想象一下，您的Kubernetes集群就像一个大型的公寓楼，每个公寓是一个应用程序。而Ingress就是大楼的大门，允许外部人员进入。大门上有一个保安，他会检查来访者的目的地，并根据他们的要求告诉他们去哪里。 Ingress就是这个保安，他知道应该将来自某个网址的请求引导到特定的应用程序。这可以通过不同的规则来实现，就像保安知道哪个公寓对应哪个房间号一样。这样，当人们访问不同的网址时，保安就会将他们引导到正确的应用程序。 要使保安工作，您需要在大门口放置一个标志，告诉保安如何引导来访者。在Kubernetes中，这个标志就是Ingress对象。而控制这个保安的是Ingress Controller，它就像是保安的老板，负责确保保安按照标志上的规则来引导人们。 总而言之，Ingress就是一种管理外部流量的方式，它允许您告诉集群如何将请求引导到正确的应用程序，就像大门保安将人们引导到正确的公寓一样。这使得外部用户能够方便地访问您在Kubernetes中运行的不同应用程序。</p><h2 id="高可靠ingress架构" tabindex="-1"><a class="header-anchor" href="#高可靠ingress架构" aria-hidden="true">#</a> 高可靠Ingress架构</h2><p>高可靠架构首先解决的就是单点故障，通常在Kubernetes中采用多副本部署方式，同时由于Ingress作为集群流量接入口，建议采用一个Ingress服务独占一个Ingress节点的方式，以避免业务应用与Ingress服务发生资源抢占。架构图如下： <img src="https://img.kubesre.com/kubesre/20230810/1.png" alt="未命名文件.png"></p><h2 id="部署高可靠ingress" tabindex="-1"><a class="header-anchor" href="#部署高可靠ingress" aria-hidden="true">#</a> 部署高可靠Ingress</h2><h3 id="环境介绍" tabindex="-1"><a class="header-anchor" href="#环境介绍" aria-hidden="true">#</a> 环境介绍</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ kubectl get nodes\nNAME                     STATUS   ROLES           AGE     VERSION\ncluster-control-plane    Ready    control-plane   4m5s    v1.27.3\ncluster-control-plane2   Ready    control-plane   3m47s   v1.27.3\ncluster-control-plane3   Ready    control-plane   2m59s   v1.27.3\ncluster-worker           Ready    <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>          2m50s   v1.27.3\ncluster-worker2          Ready    <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>          2m52s   v1.27.3\ncluster-worker3          Ready    <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>          2m54s   v1.27.3\ncluster-worker4          Ready    <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>          2m52s   v1.27.3\ncluster-worker5          Ready    <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>          2m54s   v1.27.3\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注：当前环境为kubernetes v1.27.3</p><h3 id="版本选择" tabindex="-1"><a class="header-anchor" href="#版本选择" aria-hidden="true">#</a> 版本选择</h3><p>选择Ingress-nginx最新版本1.8.1，支持的kubernetes 1.27,1.26, 1.25, 1.24版本</p><table><thead><tr><th></th><th>Ingress-NGINX version</th><th>k8s supported version</th><th>Alpine Version</th><th>Nginx Version</th><th>Helm Chart Version</th></tr></thead><tbody><tr><td>🔄</td><td><strong>v1.8.1</strong></td><td>1.27,1.26, 1.25, 1.24</td><td>3.18.2</td><td>1.21.6</td><td>4.7.*</td></tr><tr><td>🔄</td><td><strong>v1.8.0</strong></td><td>1.27,1.26, 1.25, 1.24</td><td>3.18.0</td><td>1.21.6</td><td>4.7.*</td></tr><tr><td>🔄</td><td><strong>v1.7.1</strong></td><td>1.27,1.26, 1.25, 1.24</td><td>3.17.2</td><td>1.21.6</td><td>4.6.*</td></tr><tr><td>🔄</td><td><strong>v1.7.0</strong></td><td>1.26, 1.25, 1.24</td><td>3.17.2</td><td>1.21.6</td><td>4.6.*</td></tr><tr><td>🔄</td><td><strong>v1.6.4</strong></td><td>1.26, 1.25, 1.24, 1.23</td><td>3.17.0</td><td>1.21.6</td><td>4.5.*</td></tr><tr><td></td><td>v1.5.1</td><td>1.25, 1.24, 1.23</td><td>3.16.2</td><td>1.21.6</td><td>4.4.*</td></tr><tr><td></td><td>v1.4.0</td><td>1.25, 1.24, 1.23, 1.22</td><td>3.16.2</td><td>1.19.10†</td><td>4.3.0</td></tr><tr><td></td><td>v1.3.1</td><td>1.24, 1.23, 1.22, 1.21, 1.20</td><td>3.16.2</td><td>1.19.10†</td><td>4.2.5</td></tr><tr><td></td><td>v1.3.0</td><td>1.24, 1.23, 1.22, 1.21, 1.20</td><td>3.16.0</td><td>1.19.10†</td><td>4.2.3</td></tr><tr><td></td><td>v1.2.1</td><td>1.23, 1.22, 1.21, 1.20, 1.19</td><td>3.14.6</td><td>1.19.10†</td><td>4.1.4</td></tr><tr><td></td><td>v1.1.3</td><td>1.23, 1.22, 1.21, 1.20, 1.19</td><td>3.14.4</td><td>1.19.10†</td><td>4.0.19</td></tr><tr><td></td><td>v1.1.2</td><td>1.23, 1.22, 1.21, 1.20, 1.19</td><td>3.14.2</td><td>1.19.9†</td><td>4.0.18</td></tr><tr><td></td><td>v1.1.1</td><td>1.23, 1.22, 1.21, 1.20, 1.19</td><td>3.14.2</td><td>1.19.9†</td><td>4.0.17</td></tr><tr><td></td><td>v1.1.0</td><td>1.22, 1.21, 1.20, 1.19</td><td>3.14.2</td><td>1.19.9†</td><td>4.0.13</td></tr><tr><td></td><td>v1.0.5</td><td>1.22, 1.21, 1.20, 1.19</td><td>3.14.2</td><td>1.19.9†</td><td>4.0.9</td></tr><tr><td></td><td>v1.0.4</td><td>1.22, 1.21, 1.20, 1.19</td><td>3.14.2</td><td>1.19.9†</td><td>4.0.6</td></tr><tr><td></td><td>v1.0.3</td><td>1.22, 1.21, 1.20, 1.19</td><td>3.14.2</td><td>1.19.9†</td><td>4.0.5</td></tr><tr><td></td><td>v1.0.2</td><td>1.22, 1.21, 1.20, 1.19</td><td>3.14.2</td><td>1.19.9†</td><td>4.0.3</td></tr><tr><td></td><td>v1.0.1</td><td>1.22, 1.21, 1.20, 1.19</td><td>3.14.2</td><td>1.19.9†</td><td>4.0.2</td></tr><tr><td></td><td>v1.0.0</td><td>1.22, 1.21, 1.20, 1.19</td><td>3.13.5</td><td>1.20.1</td><td>4.0.1</td></tr></tbody></table><h3 id="安装-ingress" tabindex="-1"><a class="header-anchor" href="#安装-ingress" aria-hidden="true">#</a> 安装 Ingress</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 安装ingress</span>\n$ kubectl apply <span class="token parameter variable">-f</span> https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.8.1/deploy/static/provider/cloud/deploy.yaml\nnamespace/ingress-nginx created\nserviceaccount/ingress-nginx created\nserviceaccount/ingress-nginx-admission created\nrole.rbac.authorization.k8s.io/ingress-nginx created\nrole.rbac.authorization.k8s.io/ingress-nginx-admission created\nclusterrole.rbac.authorization.k8s.io/ingress-nginx created\nclusterrole.rbac.authorization.k8s.io/ingress-nginx-admission created\nrolebinding.rbac.authorization.k8s.io/ingress-nginx created\nrolebinding.rbac.authorization.k8s.io/ingress-nginx-admission created\nclusterrolebinding.rbac.authorization.k8s.io/ingress-nginx created\nclusterrolebinding.rbac.authorization.k8s.io/ingress-nginx-admission created\nconfigmap/ingress-nginx-controller created\nservice/ingress-nginx-controller created\nservice/ingress-nginx-controller-admission created\ndeployment.apps/ingress-nginx-controller created\njob.batch/ingress-nginx-admission-create created\njob.batch/ingress-nginx-admission-patch created\ningressclass.networking.k8s.io/nginx created\nvalidatingwebhookconfiguration.admissionregistration.k8s.io/ingress-nginx-admission created\n\n<span class="token comment"># 查看安装状态</span>\n$ kubectl get deploy,pod <span class="token parameter variable">-n</span> ingress-nginx\nNAME                                       READY   UP-TO-DATE   AVAILABLE   AGE\ndeployment.apps/ingress-nginx-controller   <span class="token number">1</span>/1     <span class="token number">1</span>            <span class="token number">1</span>           75s\n\nNAME                                            READY   STATUS      RESTARTS   AGE\npod/ingress-nginx-admission-create-qf7ln        <span class="token number">0</span>/1     Completed   <span class="token number">0</span>          74s\npod/ingress-nginx-admission-patch-7nxmr         <span class="token number">0</span>/1     Completed   <span class="token number">0</span>          74s\npod/ingress-nginx-controller-79d66f886c-v5d9f   <span class="token number">1</span>/1     Running     <span class="token number">0</span>          74s\n\n<span class="token comment"># 如上状态，说明安装成功</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>到此为止，Ingress安装成功了！</p><h3 id="ingress-hpa" tabindex="-1"><a class="header-anchor" href="#ingress-hpa" aria-hidden="true">#</a> Ingress HPA</h3><p>一般情况下，Ingress已经有足够能力应对业务的突发情况，为了避免高负载情况下仍然不满足需求，我们可以通过HPA进行对Ingress进行水平扩容，接下来我们来配置一下，</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 安装metrics-server</span>\n$ kubectl apply <span class="token parameter variable">-f</span> https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/high-availability-1.21+.yaml\nserviceaccount/metrics-server created\nclusterrole.rbac.authorization.k8s.io/system:aggregated-metrics-reader created\nclusterrole.rbac.authorization.k8s.io/system:metrics-server created\nrolebinding.rbac.authorization.k8s.io/metrics-server-auth-reader created\nclusterrolebinding.rbac.authorization.k8s.io/metrics-server:system:auth-delegator created\nclusterrolebinding.rbac.authorization.k8s.io/system:metrics-server created\nservice/metrics-server created\ndeployment.apps/metrics-server created\npoddisruptionbudget.policy/metrics-server created\napiservice.apiregistration.k8s.io/v1beta1.metrics.k8s.io created\n\n<span class="token comment"># 创建HPA</span>\n$ <span class="token function">cat</span> hpa.yml\napiVersion: autoscaling/v2\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: ingress-nginx-controller-hpa\n  namespace: ingress-nginx\nspec:\n  scaleTargetRef:\n    apiVersion: apps/v1\n    kind: Deployment\n    name: ingress-nginx-controller  <span class="token comment"># Deployment Name</span>\n  minReplicas: <span class="token number">3</span>   <span class="token comment"># 最小副本数</span>\n  maxReplicas: <span class="token number">6</span>   <span class="token comment"># 最大副本数</span>\n  metrics:\n  - resource:\n      name: cpu\n      target:\n        averageUtilization: <span class="token number">80</span> <span class="token comment"># 阈值</span>\n        type: Utilization\n    type: Resource\n    \n$ kubectl apply <span class="token parameter variable">-f</span> hpa.yml <span class="token parameter variable">-n</span> ingress-nginx\nhorizontalpodautoscaler.autoscaling/ingress-nginx-controller-hpa created\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="最佳实践" tabindex="-1"><a class="header-anchor" href="#最佳实践" aria-hidden="true">#</a> 最佳实践</h2><p>接下来，咱们通过最佳实践，验证一下ngress的功能是否正常！</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 部署应用</span>\n$ <span class="token function">cat</span> deployment.yml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: demo\n  labels:\n    app: demo\nspec:\n  replicas: <span class="token number">1</span>\n  selector:\n    matchLabels:\n      app: demo\n  template:\n    metadata:\n      labels:\n        app: demo\n    spec:\n      containers:\n      - name: demo\n        imagePullPolicy: Always\n        image: registry.cn-shanghai.aliyuncs.com/kubesre01/demo:v1\n        ports:\n        - containerPort: <span class="token number">8080</span>\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: demo-svc\nspec:\n  type: ClusterIP\n  selector:\n    app: demo\n  ports:\n    - port: <span class="token number">8080</span>\n      targetPort: <span class="token number">8080</span>\n$ kubectl apply <span class="token parameter variable">-f</span> deployment.yml\ndeployment.apps/demo created\nservice/demo-svc created\n\n<span class="token comment"># 创建ingress对象</span>\n$ <span class="token function">cat</span> ingress.yml\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: demo\nspec:\n  rules:\n  - host: demo.kubesre.com  <span class="token comment"># 访问域名</span>\n    http:\n      paths:\n      - path: /info    <span class="token comment"># uri</span>\n        pathType: Prefix  <span class="token comment"># 匹配方式</span>\n        backend:\n          service:\n            name: demo-svc  <span class="token comment"># Service Name</span>\n            port:\n              number: <span class="token number">8080</span>  <span class="token comment"># Service访问端口</span>\n  ingressClassName: nginx\n$ kubectl apply <span class="token parameter variable">-f</span> ingress.yml\ningress.networking.k8s.io/demo created\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>pathType：参数说明：</strong></p><ul><li>ImplementationSpecific：对于这种路径类型，匹配方法取决于 IngressClass。 具体实现可以将其作为单独的 pathType 处理或者与 Prefix 或 Exact 类型作相同处理。</li><li>Exact：精确匹配 URL 路径，且区分大小写。</li><li>Prefix：基于以 / 分隔的 URL 路径前缀匹配。匹配区分大小写，并且对路径中的元素逐个完成。 路径元素指的是由 / 分隔符分隔的路径中的标签列表。 如果每个 p 都是请求路径 p 的元素前缀，则请求与路径 p 匹配。</li></ul><p><strong>访问：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 出现如下信息，说明访问成功了</span>\n$ <span class="token function">curl</span> demo.kubesre.com/info\n<span class="token punctuation">{</span><span class="token string">&quot;message&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;云原生运维圈！&quot;</span><span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>本文介绍了什么是Ingress，以及高可用部署解决了哪些问题并通过实战进行讲解，接下来文章内容中会分享更多企业级实战案例，请敬请期待！</p>', 26);
const _hoisted_27 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache) {
  return openBlock(), createElementBlock("div", null, _hoisted_27);
}
const bushukaokekaoxingingress_html = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["__file", "bushukaokekaoxingingress.html.vue"]]);
export {
  bushukaokekaoxingingress_html as default
};
