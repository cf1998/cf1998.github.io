(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{459:function(s,n,a){"use strict";a.r(n);var t=a(16),e=Object(t.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"linux进程引入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linux进程引入"}},[s._v("#")]),s._v(" Linux进程引入")]),s._v(" "),a("p",[s._v("如果你要写一个计算加法的小程序，这个程序需要输入来自于一个文件，计算完成后的结果则输入到另一个文件中。\n"),s._v("\n由于计算机只认识0和1，所以无论用那种语言编写这段代码，最后都需要通过某种方式翻译成二进制文件，才能在计算机操作系统中运行起来。")]),s._v(" "),a("p",[s._v("而为了能够让这些代码正常运行，我们往往还要给它提供数据，比如我们这个加法程序所需要的输入文件。这些数据加上代码本身的二进制文件，放在磁盘，就是我们平常所说的一个"),a("code",[s._v("程序")]),s._v("，也叫代码的可执行镜像（executable image）。")]),s._v(" "),a("p",[s._v("然后，我们就可以在计算机上运行这个"),a("code",[s._v("程序")]),s._v("了。")]),s._v(" "),a("p",[s._v("首先，操作系统从"),a("code",[s._v("程序")]),s._v("中发现输入保存在一个文件中，所以这些数据就被会加载到内存中待命。同时，操作系统又读取到了计算加法的指令，这时，它就需要指示CPU完成加法操作。而CPU与内存协作进行加法计算，又会使用寄存器存放数值、内存堆栈保存执行的命令和变量。同时，计算机里还有被打开的文件，以及各种各样的I/O设备在不断地调用中修改自己的状态。")]),s._v(" "),a("p",[s._v("就这样，一旦"),a("code",[s._v("程序")]),s._v("被执行起来，它就从磁盘上的二进制文件，变成了计算机内存中的数据、寄存器里的值，堆栈中的指令、被打开的文件，以及各种设备状态信息的一个集合。像这样一个程序运行起来后的计算机执行环境的总和，就是我们的主角：进程。")]),s._v(" "),a("p",[s._v("所以，对于进程来说，它的静态表现就是程序，平常都安安静静地待在磁盘上；而一旦运行起来，它就成为了计算机里的数据和状态的总和，这就是它的动态表现，")]),s._v(" "),a("h2",{attrs:{id:"linux容器的隔离"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linux容器的隔离"}},[s._v("#")]),s._v(" Linux容器的隔离")]),s._v(" "),a("p",[s._v("Docker容器本质上就是Linux操作系统的进程，只是Docker通过namespace实现了进程间的资源隔离技术，这样说起来很多人会感觉到很抽象，那接下来我们通过实战进行了解一下吧！")]),s._v(" "),a("p",[s._v("首先我们先创建一个容器：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker run -it busybox /bin/sh")]),s._v("\n/ "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("在容器里执行一下PS指令：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("/ "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ps")]),s._v("\nPID   "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("USER")]),s._v("     TIME  COMMAND\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(":00 /bin/sh\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" root      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(":00 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("可以看到，我们在Docker里最开始执行的/bin/sh，就是这个容器内部的第1号进程（PID=1），而这个容器里一共只有两个进程在运行。这就意味着，前面执行的/bin/sh，以及我们刚刚执行的ps，已经被Docker隔离在一个跟宿主机不同的世界当中。")]),s._v(" "),a("p",[a("strong",[s._v("这究竟事怎么做到的呢？")])]),s._v(" "),a("p",[s._v("本来，每当我们在宿主机上运行了一个 /bin/sh 程序，操作系统都会给它分配一个进程编号，比如 PID=100。这个编号是进程的唯一标识，就像员工的工牌一样。所以 PID=100，可以粗略地理解为这个 /bin/sh 是我们公司里的第 100 号员工，而第 1 号员工就自然是比尔 · 盖茨这样统领全局的人物。而现在，我们要通过 Docker 把这个 /bin/sh 程序运行在一个容器当中。这时候，Docker 就会在这个第 100 号员工入职时给他施一个“障眼法”，让他永远看不到前面的其他 99 个员工，更看不到比尔 · 盖茨。这样，他就会错误地以为自己就是公司里的第 1 号员工。这种机制，其实就是对被隔离应用的进程空间做了手脚，使得这些进程只能看到重新计算过的进程编号，比如 PID=1。可实际上，他们在宿主机的操作系统里，还是原来的第 100 号进程。")]),s._v(" "),a("p",[s._v("**这种技术，就是 Linux 里面的 Namespace 机制。**而 Namespace 的使用方式也非常有意思：它其实只是 Linux 创建新进程的一个可选参数。我们知道，在 Linux 系统中创建线程的系统调用是 clone()，比如：")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" pid "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("clone")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("main_function"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" stack_size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" SIGCHLD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("这个系统调用就会为我们创建一个新的进程，并且返回它的进程号 pid。")]),s._v(" "),a("p",[s._v("而当我们用 clone() 系统调用创建一个新进程时，就可以在参数中指定 CLONE_NEWPID 参数，比如：")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" pid "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("clone")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("main_function"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" stack_size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" CLONE_NEWPID "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" SIGCHLD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("这时，新创建的这个进程将会“看到”一个全新的进程空间，在这个进程空间里，它的 PID 是 1。之所以说“看到”，是因为这只是一个“障眼法”，在宿主机真实的进程空间里，这个进程的 PID 还是真实的数值，比如 100。")]),s._v(" "),a("p",[s._v("当然，我们还可以多次执行上面的 clone() 调用，这样就会创建多个 PID Namespace，而每个 Namespace 里的应用进程，都会认为自己是当前容器里的第 1 号进程，它们既看不到宿主机里真正的进程空间，也看不到其他 PID Namespace 里的具体情况。")]),s._v(" "),a("p",[s._v("而除了我们刚刚用到的 PID Namespace，Linux 操作系统还提供了 Mount、UTS、IPC、Network 和 User 这些 Namespace，用来对各种不同的进程上下文进行“障眼法”操作。比如，Mount Namespace，用于让被隔离进程只看到当前 Namespace 里的挂载点信息；Network Namespace，用于让被隔离进程看到当前 Namespace 里的网络设备和配置。")]),s._v(" "),a("p",[a("strong",[s._v("这，就是 Linux 容器最基本的实现原理了。")])]),s._v(" "),a("p",[s._v("所以，Docker 容器这个听起来玄而又玄的概念，实际上是在创建容器进程时，指定了这个进程所需要启用的一组 Namespace 参数。这样，容器就只能“看”到当前 Namespace 所限定的资源、文件、设备、状态，或者配置。而对于宿主机以及其他不相关的程序，它就完全看不到了。")]),s._v(" "),a("p",[a("strong",[s._v("所以说，容器，其实是一种特殊的进程而已。")])]),s._v(" "),a("h2",{attrs:{id:"linux容器的限制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linux容器的限制"}},[s._v("#")]),s._v(" Linux容器的限制")]),s._v(" "),a("p",[a("strong",[s._v("为什么需要对容器做"),a("code",[s._v("限制")]),s._v("呢？")])]),s._v(" "),a("p",[s._v("虽然容器内的第一号进程在"),a("code",[s._v("障眼法")]),s._v("的干扰下只能看到容器里的情况，但是宿主机上，它作为第100号进程与其他所有进程之间依然事平台的竞争关系，这就意味着，虽然第100号进程表面上被隔离起来，但是它所能够使用到的资源（比如CPU，内存），却是可以随时被宿主机上的其他进程（或者其他机器）占用的。当然这个100号进程自己也可能把所有资源吃光。这些情况，显然都不是一个沙盒应该标识出来的合理行为。")]),s._v(" "),a("p",[a("strong",[s._v("Linux Cgroups是什么？")])]),s._v(" "),a("p",[s._v("cgroups是Linux下控制一个（或一组）进程的资源限制机制，全称是control groups，可以对cpu、内存等资源做精细化控制，比如目前很多的Docker在Linux下就是基于cgroups提供的资源限制机制来实现资源控制的；除此之外，开发者也可以指直接基于cgroups来进行进程资源控制，比如8核的机器上部署了一个web服务和一个计算服务，可以让web服务仅可使用其中6个核，把剩下的两个核留给计算服务。cgroups cpu限制除了可以限制使用多少/哪几个核心之外，还可以设置cpu占用比（注意占用比是各自都跑满情况下的使用比例，如果一个cgroup空闲而另一个繁忙，那么繁忙的cgroup是有可能占满整个cpu核心的）。")]),s._v(" "),a("p",[s._v("在Linux中，Cgroups给用户暴漏出的操作接口是文件系统，即它以文件和目录的方式组织在操作系统的"),a("code",[s._v("/sys/fs/cgroup")]),s._v(" 路径下。在Centos 机器里，我们可以用mount命令将他们展示：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("/ "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# mount -t cgroup")]),s._v("\ncgroup on /sys/fs/cgroup/systemd "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" cgroup "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ro,seclabel,nosuid,nodev,noexec,relatime,xattr,release_agent"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/usr/lib/systemd/systemd-cgroups-agent,name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("systemd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ncgroup on /sys/fs/cgroup/hugetlb "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" cgroup "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ro,seclabel,nosuid,nodev,noexec,relatime,hugetlb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ncgroup on /sys/fs/cgroup/cpu,cpuacct "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" cgroup "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ro,seclabel,nosuid,nodev,noexec,relatime,cpuacct,cpu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ncgroup on /sys/fs/cgroup/freezer "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" cgroup "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ro,seclabel,nosuid,nodev,noexec,relatime,freezer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ncgroup on /sys/fs/cgroup/net_cls,net_prio "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" cgroup "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ro,seclabel,nosuid,nodev,noexec,relatime,net_prio,net_cls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ncgroup on /sys/fs/cgroup/blkio "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" cgroup "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ro,seclabel,nosuid,nodev,noexec,relatime,blkio"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ncgroup on /sys/fs/cgroup/cpuset "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" cgroup "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ro,seclabel,nosuid,nodev,noexec,relatime,cpuset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ncgroup on /sys/fs/cgroup/perf_event "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" cgroup "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ro,seclabel,nosuid,nodev,noexec,relatime,perf_event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ncgroup on /sys/fs/cgroup/memory "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" cgroup "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ro,seclabel,nosuid,nodev,noexec,relatime,memory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ncgroup on /sys/fs/cgroup/devices "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" cgroup "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ro,seclabel,nosuid,nodev,noexec,relatime,devices"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ncgroup on /sys/fs/cgroup/pids "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" cgroup "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ro,seclabel,nosuid,nodev,noexec,relatime,pids"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("目前看到，在"),a("code",[s._v("/sys/fs/cgroup")]),s._v("下面有很多诸如cpuset、cpu、memory这样的子目录，也叫子系统。这些都是我这台机器当前可以被Cgroups进行限制的资源种类。而在子系统对应的资源类下，你就可以看到该类资源具体可以被限制的方法。")]),s._v(" "),a("p",[s._v("比如，对CPU子系统来说，我们就可以看到如下几个配置文件：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("/ "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ls -l /sys/fs/cgroup/cpu/")]),s._v("\ntotal "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n-rw-r--r--    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root     root             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Aug "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(":55 cgroup.clone_children\n--w--w--w-    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root     root             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Aug "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(":55 cgroup.event_control\n-rw-r--r--    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root     root             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Aug "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(":55 cgroup.procs\n-rw-r--r--    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root     root             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Aug "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(":55 cpu.cfs_period_us\n-rw-r--r--    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root     root             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Aug "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(":55 cpu.cfs_quota_us\n-rw-r--r--    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root     root             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Aug "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(":55 cpu.rt_period_us\n-rw-r--r--    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root     root             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Aug "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(":55 cpu.rt_runtime_us\n-rw-r--r--    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root     root             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Aug "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(":55 cpu.shares\n-r--r--r--    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root     root             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Aug "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(":55 cpu.stat\n-r--r--r--    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root     root             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Aug "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(":55 cpuacct.stat\n-rw-r--r--    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root     root             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Aug "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(":55 cpuacct.usage\n-r--r--r--    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root     root             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Aug "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(":55 cpuacct.usage_percpu\n-rw-r--r--    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root     root             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Aug "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(":55 notify_on_release\n-rw-r--r--    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root     root             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Aug "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(":55 tasks\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("p",[s._v("对Linux CPU管理熟悉的同学，应该会注意到cfs_period和cfs_quota这样的关键词。这两个参数需要组合使用，可以用来限制进程在长度cfs_period的一段时间内，只能被分配到总量为cfs_quota的CPU时间。")]),s._v(" "),a("p",[a("strong",[s._v("接下来我们来使用下此配置?")])]),s._v(" "),a("p",[s._v("首先我们需要在对应的子系统下面创建一个目录：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cd /sys/fs/cgroup/cpu")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# mkdir container")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cd container/")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ll")]),s._v("\ntotal "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n-rw-r--r--. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Aug "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),s._v(":38 cgroup.clone_children\n--w--w--w-. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Aug "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),s._v(":38 cgroup.event_control\n-rw-r--r--. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Aug "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),s._v(":38 cgroup.procs\n-r--r--r--. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Aug "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),s._v(":38 cpuacct.stat\n-rw-r--r--. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Aug "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),s._v(":38 cpuacct.usage\n-r--r--r--. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Aug "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),s._v(":38 cpuacct.usage_percpu\n-rw-r--r--. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Aug "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),s._v(":38 cpu.cfs_period_us\n-rw-r--r--. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Aug "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),s._v(":38 cpu.cfs_quota_us\n-rw-r--r--. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Aug "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),s._v(":38 cpu.rt_period_us\n-rw-r--r--. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Aug "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),s._v(":38 cpu.rt_runtime_us\n-rw-r--r--. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Aug "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),s._v(":38 cpu.shares\n-r--r--r--. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Aug "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),s._v(":38 cpu.stat\n-rw-r--r--. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Aug "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),s._v(":38 notify_on_release\n-rw-r--r--. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Aug "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),s._v(":38 tasks\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("p",[s._v("这个目录被称为一个控制组。你会发现，操作系统会在你新创建的container目录下，自动生成子系统对应的资源限制文件。")]),s._v(" "),a("p",[s._v("此刻，我们执行一个死循环脚本，把计算的CPU吃到100%")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# while : ; do : ; done ")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# top")]),s._v("\n  PID "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("USER")]),s._v("      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND                                                                 \n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7996")]),s._v(" root      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1320")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("256")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("212")]),s._v(" R  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(":12.75 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("通过top命令可以看到，CPU的使用率已经100%")]),s._v(" "),a("p",[s._v("此时，我们可以通过查看container目录下的文件，可以看到container控制组的CPU quota还没有任何限制（：-1）")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cat  /sys/fs/cgroup/cpu/container/cpu.cfs_quota_us ")]),s._v("\n-1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("接下来我们通过修改这些文件来设置限制：")]),s._v(" "),a("p",[s._v("向container组里的cfs_quota文件写入20ms（20000 us）")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v(" echo 20000 > /sys/fs/cgroup/cpu/container/cpu.cfs_quota_us \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("blockquote",[a("p",[s._v("100ms的时间里，被该控制组限制的进行只能使用20MS的CPU时间，也就是说这个进程只能使用到20%的CPU带宽")])]),s._v(" "),a("p",[s._v("接下来，我们把被限制的进程的PID写入container组里的tasks文件，上面的设置就会对该进程生效了")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo 7996 > /sys/fs/cgroup/cpu/container/tasks ")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("然后通过top查看下：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v(" PID "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("USER")]),s._v("      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND               \n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7996")]),s._v(" root      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("119484")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6140")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1652")]),s._v(" R  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20.3")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.2")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(":45.10 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("可以看到，计算机的CPU使用率立刻降到了20%")]),s._v(" "),a("p",[a("strong",[a("u",[s._v("是不是很神奇？")])])]),s._v(" "),a("p",[s._v("除了CPU子系统外，Cgroups的每一项子系统都有独有的资源限制能力：比如")]),s._v(" "),a("ul",[a("li",[s._v("blkio，为块设备设定I/O限制，一般用于磁盘等设备")]),s._v(" "),a("li",[s._v("cpuset，为进程分配单独的CPU核和对应的内存节点")]),s._v(" "),a("li",[s._v("memory，为进程设定内存使用的限制")])]),s._v(" "),a("p",[s._v("Linux Cgroups的设计还是比较易用的，简单粗暴地理解呢，它就是一个子系统目录加上一组资源限制文件的组合。而对于Docker等Linux容器项目来说，它们只需要在每个子系统下面，为每个容器创建一个控制组（即创建一个目录），然后在启动容器进程之后，把这个进程PID填写到对应控制组的tasks文件中就可以了。")]),s._v(" "),a("p",[s._v("而至于在这些控制组下面的资源文件里填上什么值，就靠用户执行docker run时的参数指定就可以了,比如如下命令：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker run -it --cpu-period=10000 --cpu-quota=20000 ubuntu /bin/bash")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("在启动这个容器后，我们可以通过查看Cgroup文件系统下，CPU子系统中，"),a("code",[s._v("docker")]),s._v("这个控制组里的资源限制文件的内容来确认：")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#cat/sys/fs/cgroup/cpu/docker/0712c3d12935b9a3f69ac976b9d70309b78cb7db9a5a5c8a612742370b7453e4/cpu.cfs_period_us ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10000")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#cat/sys/fs/cgroup/cpu/docker/0712c3d12935b9a3f69ac976b9d70309b78cb7db9a5a5c8a612742370b7453e4/cpu.cfs_quota_us ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20000")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])])}),[],!1,null,null,null);n.default=e.exports}}]);